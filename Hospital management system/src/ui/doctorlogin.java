/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import hospital.management.system.Doctor;
import hospital.management.system.DoctorDirectory;
import hospital.management.system.Encounter;
import hospital.management.system.EncounterHistory;
import static hospital.management.system.EncounterHistory.encounterHist;
import hospital.management.system.PatientDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author SHREYAS
 */
public class doctorlogin extends javax.swing.JFrame {

    /**
     * Creates new form doctorform
     */
    DoctorDirectory records;
    Doctor doc1 = new Doctor();
    EncounterHistory encounterHist;
    PatientDirectory patientDir;
    
    public String username;
    String community;
    int docID;
    
    private TableRowSorter searcher;
    public doctorlogin() {
        initComponents();
        
        if (encounterHist == null){
            this.encounterHist = new EncounterHistory();
        }
        else{
            this.encounterHist = encounterHist;
        }
        
        for(Doctor d:DoctorDirectory.getRecords()){
            if(docID == d.getDoctorID()){
                doc1= d;
            }
        
        this.records = records;
        this.encounterHist = encounterHist;
        this.patientDir = patientDir;
        encounterDisplayTable(docID);
        viewPatientDetails(username);
    }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelpatientdirectory = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        encRegTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PatientEncNametxt = new javax.swing.JTextField();
        patientIDEnctxt = new javax.swing.JTextField();
        doctorNameEnctxt = new javax.swing.JTextField();
        doctorIDEnctxt = new javax.swing.JTextField();
        encounterIDEnctxtr = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        BloodPresEnctxt = new javax.swing.JTextField();
        SugarLevelEnctxt = new javax.swing.JTextField();
        SymptomsEnctxt = new javax.swing.JTextField();
        DiagnosisEnctxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        BodyTempEnctxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelpatientdirectory.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        labelpatientdirectory.setText("patient directory");

        encRegTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                " patient name", "patient id", "doctor name", "doctor id", "encounter id", "blood pressure", "sugar level", "body temperature", "symptoms", "diagnosis", "hospital visit", "gender"
            }
        ));
        jScrollPane1.setViewportView(encRegTable);

        jLabel1.setText("patient name");

        jLabel2.setText("patient id");

        jLabel3.setText("doctor name");

        jLabel4.setText("doctor id");

        jLabel6.setText("encounter id");

        patientIDEnctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDEnctxtActionPerformed(evt);
            }
        });

        doctorNameEnctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorNameEnctxtActionPerformed(evt);
            }
        });

        doctorIDEnctxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorIDEnctxtActionPerformed(evt);
            }
        });

        jLabel7.setText("blood pressure");

        jLabel8.setText("sugar level");

        jLabel9.setText("body temperature");

        jLabel10.setText("symptoms");

        jLabel11.setText("diagnosis");

        jButton1.setText("view");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(labelpatientdirectory))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(doctorIDEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(encounterIDEnctxtr, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(doctorNameEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(patientIDEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addComponent(PatientEncNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(145, 145, 145)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SymptomsEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BodyTempEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SugarLevelEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(58, 58, 58)
                                    .addComponent(BloodPresEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel11)
                                .addGap(81, 81, 81)
                                .addComponent(DiagnosisEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addComponent(jButton3)))))
                .addGap(64, 64, 64))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(labelpatientdirectory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PatientEncNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(BloodPresEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(patientIDEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(SugarLevelEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(doctorNameEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(BodyTempEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(SymptomsEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(DiagnosisEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(doctorIDEnctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(encounterIDEnctxtr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(226, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patientIDEnctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDEnctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIDEnctxtActionPerformed

    private void doctorNameEnctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorNameEnctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorNameEnctxtActionPerformed

    private void doctorIDEnctxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorIDEnctxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorIDEnctxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex=encRegTable.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) encRegTable.getModel();
        System.out.print(model.getValueAt(selectedRowIndex,0));
        Encounter selectedEnc=(Encounter)model.getValueAt(selectedRowIndex,0);
        encounterHist.deleteEncounter(selectedEnc);
        //encounterList.deleteEncounter(selectedEnc);
        encounterDisplayTable(docID);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex1=encRegTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model1 = (DefaultTableModel) encRegTable.getModel();
        Encounter selectedEnc=(Encounter)model1.getValueAt(selectedRowIndex1,0);
        
        PatientEncNametxt.setText(selectedEnc.patient.getName());
        patientIDEnctxt.setText(String.valueOf(selectedEnc.patient.getPatientId()));
        doctorIDEnctxt.setText(String.valueOf(selectedEnc.doctor.getDoctorID()));
        doctorNameEnctxt.setText(selectedEnc.doctor.getName());
        encounterIDEnctxtr.setText(String.valueOf(selectedEnc.getEncounterID()));
        BloodPresEnctxt.setText(String.valueOf(selectedEnc.getBldPressure()));
        BodyTempEnctxt.setText(String.valueOf(selectedEnc.getBodyTemp()));
        SugarLevelEnctxt.setText(String.valueOf(selectedEnc.getSugarLevel()));
        SymptomsEnctxt.setText(selectedEnc.getSymptoms());
        DiagnosisEnctxt.setText(selectedEnc.getEncDiagnosis());
        encounterIDEnctxtr.setEditable(false);
        patientIDEnctxt.setEditable(false);
        doctorIDEnctxt.setEditable(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=encRegTable.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) encRegTable.getModel();
        Encounter selectedEnc=(Encounter)model1.getValueAt(selectedRowIndex1,0);
        selectedEnc.patient.setName(PatientEncNametxt.getText());
        selectedEnc.doctor.setName(doctorNameEnctxt.getText());
        selectedEnc.setBldPressure(Float.parseFloat(BloodPresEnctxt.getText()));
        selectedEnc.setSugarLevel(Float.parseFloat(SugarLevelEnctxt.getText()));
        selectedEnc.setBodyTemp(Float.parseFloat(BodyTempEnctxt.getText()));
        selectedEnc.setSymptoms(SymptomsEnctxt.getText());
        selectedEnc.setEncDiagnosis((DiagnosisEnctxt.getText()));
        encounterDisplayTable(docID);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    public void encounterDisplayTable(int docID){
            DefaultTableModel model1 = (DefaultTableModel) encRegTable.getModel();
            model1.setRowCount(0);
            //ystem.out.println("Done");
            for (Encounter es:EncounterHistory.getEncounterHist()){
                Object[] row=new Object[12];
                row[0]=es;
                row[1]=es.doctor.getDoctorID();
                row[2]=es.doctor.getName();
                row[3]=es.patient.getPatientId();
                row[4]=es.patient.getName();
                row[5]=es.getEncounterDate();
                row[6]=es.getEncounterTime();
                row[7]=es.getBldPressure();
                row[8]=es.getSugarLevel();
                row[9]=es.getBodyTemp();
                row[10]=es.getSymptoms();
                row[11]=es.getEncDiagnosis();
                model1.addRow(row);
            }
        }
    
    public void viewPatientDetails(String username){



       Encounter enc = new Encounter();
        int docFound = 0;
        for(Encounter e:EncounterHistory.getEncounterHist()){
            if(username.equals(e.doctor.getEmailId())){
                System.out.println(e.doctor.getEmailId());
                enc = e;
                docFound = 1;
            }
            else{
                System.out.println("-----------");
                System.out.println(username);
                System.out.println(e.doctor.getEmailId());
            }
        }
        
        PatientEncNametxt.setText(enc.patient.getName());
        patientIDEnctxt.setText(String.valueOf( enc.patient.getPatientId()));
        doctorIDEnctxt.setText(String.valueOf(enc.doctor.getDoctorID()));
        doctorNameEnctxt.setText(enc.doctor.getName());
        encounterIDEnctxtr.setText(String.valueOf(enc.getEncounterID()));
        
        BloodPresEnctxt.setText(String.valueOf(enc.getBldPressure()));
        BodyTempEnctxt.setText(String.valueOf(enc.getBodyTemp()));
        SugarLevelEnctxt.setText(String.valueOf(enc.getSugarLevel()));
        SymptomsEnctxt.setText(enc.getSymptoms());
        DiagnosisEnctxt.setText(enc.getEncDiagnosis());
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(doctorlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(doctorlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(doctorlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(doctorlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new doctorlogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BloodPresEnctxt;
    private javax.swing.JTextField BodyTempEnctxt;
    private javax.swing.JTextField DiagnosisEnctxt;
    private javax.swing.JTextField PatientEncNametxt;
    private javax.swing.JTextField SugarLevelEnctxt;
    private javax.swing.JTextField SymptomsEnctxt;
    private javax.swing.JTextField doctorIDEnctxt;
    private javax.swing.JTextField doctorNameEnctxt;
    private javax.swing.JTable encRegTable;
    private javax.swing.JTextField encounterIDEnctxtr;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelpatientdirectory;
    private javax.swing.JTextField patientIDEnctxt;
    // End of variables declaration//GEN-END:variables
}
